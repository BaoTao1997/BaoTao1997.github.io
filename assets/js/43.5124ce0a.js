(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{244:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"_1-二叉树的高度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-二叉树的高度","aria-hidden":"true"}},[s._v("#")]),s._v(" 1.二叉树的高度")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("二叉排序树")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("又称为二叉查找树"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("二叉搜索树"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n（"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("）若左子树不空，则左子树上所有结点的值均小于它的根结点的值；\n（"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("）若右子树不空，则右子树上所有结点的值均大于或等于它的根结点的值；\n（"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("）左、右子树也分别为二叉排序树；\n平衡二叉搜索树"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("一棵空树或它的左右两个子树的高度差的绝对值不超过"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，并且左右两个子树都是一棵平衡二叉搜索树\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"_2-二叉树的遍历"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-二叉树的遍历","aria-hidden":"true"}},[s._v("#")]),s._v(" 2.二叉树的遍历")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v(" 二叉树即每个节点只有左右两个节点"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("所以我们用"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"根 左 右"')]),s._v("表示二叉树及其子树的先序遍历\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"左 根 右"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("中"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"左 右 根"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("后"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  根据根的顺序关系来记忆即可\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])},[],!1,null,null,null);t.default=e.exports}}]);